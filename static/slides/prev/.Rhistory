library(sf)
nc  = st_read("data/gis/nc_counties/")
air = st_read("data/gis/airports/")
hwy = st_read("data/gis/us_interstates/")
nc
nc
library(tibble)
nc
class(nc)
nc  = st_read("data/gis/nc_counties/") %>% tbl_df()
library(dplyr)
nc  = st_read("data/gis/nc_counties/") %>% tbl_df()
nc
nc  = st_read("data/gis/nc_counties/")
nc
par(mar=c(3,3,0.1,0.1), mfrow=c(1,3))
plot(nc,  axes=TRUE)
plot(air, axes=TRUE, pch=1, col="blue")
plot(hwy, axes=TRUE, col="red")
par(mar=c(3,3,0.1,0.1), mfrow=c(1,3))
plot(nc,  axes=TRUE, asp=0)
plot(air, axes=TRUE, pch=1, col="blue")
plot(hwy, axes=TRUE, col="red")
par(mar=c(3,3,0.1,0.1), mfrow=c(1,3))
plot(nc,  axes=TRUE)
plot(air, axes=TRUE, pch=1, col="blue")
plot(hwy, axes=TRUE, col="red")
?proj4string
?st_transform
st_crs(hwy)
nc = st_transform(nc, st_crs(hwy))
st_crs(hwy)
nc = st_transform(nc, st_crs(hwy)$proj4string)
row.names(nc) = sub(" County","", as.character(nc$COUNTY))
air = st_transform(air, st_crs(hwy)$proj4string)
plot(nc)
plot(air, add=TRUE, pch=1, col="blue")
plot(hwy, add=TRUE, col="red")
plot(nc, axes=TRUE)
plot(air, add=TRUE, pch=1, col="blue")
plot(hwy, add=TRUE, col="red")
d = st_distance(nc,air)
d
?st_distance
d = apply(nc, function(x) st_distance(x,air))
d = apply(nc, 1, function(x) st_distance(x,air))
library(purrr)
by_row(nc, st_distance, y=air)
library(help=sf)
counties = c("Durham","Wake","Orange")
d = st_distance(nc[counties,],air)
d
st_distance(nc[c(1,4,22),], nc[c(1, 33,55,56),])
row.names(nc)
counties = which(row.names(nc) %in% c("Durham","Wake","Orange"))
d = st_distance(nc[counties,],air)
d
nc[counties,]
air
d = st_distance(nc[c(1,2),],air[c(1,2,3),])
d
d = st_distance(nc[counties,],air[c(1,2,3),])
d
d = st_distance(nc[counties,],air[1:nrow(air),])
d
d = st_distance(nc,air)
dim(d)
counties = c("Durham","Wake","Orange")
d = st_distance(nc[counties,],air)
str(d)
nearest_airport = apply(d, 1, which.min)
nearest_airport
nearest_airport = apply(d, 1, which.min) %>% unique()
nearest_airport
air
air$AIRPT_NAME[nearest_airport]
?st_read
nearest_airport = apply(d, 1, which.min)
air$AIRPT_NAME[nearest_airport]
d[,nearest_airport]
nearest_airport
nearest_airport = apply(d, 1, which.min) %>% unique()
air$AIRPT_NAME[nearest_airport]
d[,unique(nearest_airport]
d[,nearest_airport]
air$AIRPT_NAME[nearest_airport]
d[, nearest_airport, drop=FALSE]
air$AIRPT_NAME[nearest_airport] %>% as.character()
d[, nearest_airport, drop=FALSE]
nc_cent = st_centroid(nc)
nc_cent
(nc_cent = nc %>% mutate(geometry = st_centroid(geometry)))
nc
(nc_cent = st_centroid(geometry))
(nc_cent = st_centroid(nc, geometry))
(nc_cent = st_centroid(nc))
(nc_cent = st_centroid(nc))
d = g_distance(nc_cent[counties,],air)
counties = which(row.names(nc) %in% c("Durham","Wake","Orange"))
(nc_cent = st_centroid(nc))
d = g_distance(nc_cent[counties,],air)
d = st_distance(nc_cent[counties,],air)
d = st_distance(nc_cent[counties,],air)
(nc_cent = st_centroid(nc))
dim(nc_cent)
d = st_distance(nc_cent[counties],air)
nearest_airport = apply(d, 1, which.min) %>% unique()
air$AIRPT_NAME[nearest_airport] %>% as.character()
d[, nearest_airport, drop=FALSE]
nc_air = st_intersects(nc,air)
str(nc_air)
nc$COUNTY[lapply(nc_air, function(x) length(x) > 0)]
lapply(nc_air, function(x) length(x) > 0)
sapply(nc_air, function(x) length(x) > 0)
nc$COUNTY[sapply(nc_air, function(x) length(x) > 0)]
str(nc_air)
str(nc_air[1:10])
str(nc_air[1:15])
str(nc_air[1:25])
nc_air = st_intersects(nc,air)
str(nc_air[15:30])
nc$COUNTY[sapply(nc_air, function(x) length(x) > 0)]
plot(nc, axes=TRUE)
plot(nc[has_air,], add=TRUE, col="lightblue")
nc_air = st_intersects(nc,air)
str(nc_air[15:30])
has_air = sapply(nc_air, function(x) length(x) > 0)
nc$COUNTY[has_air]
plot(nc, axes=TRUE)
plot(nc[has_air,], add=TRUE, col="lightblue")
plot(nc, axes=TRUE)
plot(nc[has_air,], add=TRUE, col="lightblue")
plot(nc, axes=TRUE)
plot(nc[has_air,], add=TRUE, col="lightblue")
plot(air[unlist(nc_air) %>% unique(),], add=TRUE, pch=1, col="blue")
plot(nc, axes=TRUE)
plot(nc[has_air,], add=TRUE, col="lightblue")
plot(air[unlist(nc_air) %>% unique(),], add=TRUE, pch=16, col="blue")
adj = st_touches(nc)
adj
?st_touches
adj = st_touches(nc, sparse=FALSE)
str(adj)
durham = which(row.names(nc) == "Durham")
adj = st_touches(nc, sparse=FALSE)
str(adj)
nc$COUNTY[adj[Durham,]]
nc$COUNTY[adj[durham,]]
nc$COUNTY[adj[durham,]] %>% as.character()
library(corrplot)
corrplot(adj[1:20,1:20],method="color",type="lower",tl.col="black",cl.pos = "n")
library(corrplot)
row.names(adj) = row.names(nc)
col.names(adj) = row.names(nc)
rownames(adj) = rownames(nc)
colnames(adj) = rownames(nc)
rownames(adj) = rownames(nc)
colnames(adj) = rownames(nc)
corrplot(adj[1:20,1:20],method="color",type="lower",tl.col="black",cl.pos = "n")
plot(nc)
plot(nc[rowSums(adj)==max(rowSums(adj)),],add=TRUE,col="lightblue")
plot(nc, axes=TRUE)
plot(nc[rowSums(adj)==min(rowSums(adj)),],add=TRUE,col="lightblue")
data(wrld_simpl)
NAm = wrld_simpl[wrld_simpl$FIPS %in% c("CA","GL","MX","US"),]
library(maptools)
library(maptools)
data(wrld_simpl)
NAm = wrld_simpl[wrld_simpl$FIPS %in% c("CA","GL","MX","US"),]
NAm_google = spTransform(NAm, CRS("+init=epsg:3857"))
par(mar=c(3,2,2,1),mfrow=c(1,2))
plot(NAm, col="black", border=adjustcolor("black",alpha=0),
main="Lat/Long (epsg:4326)", xlim=c(-180,-10), axes=TRUE)
box()
plot(NAm_google, col="black", border=adjustcolor("black",alpha=0),
main="Google (epsg:3857)", axes=TRUE, xlim=c(-2e7,0), ylim=c(0,2e7))
box()
nc
nc
options()$width
tbl_df(nc)
plot(nc, axes=TRUE)
most_neighbors = rowSums(adj)==max(rowSums(adj))
nc$COUNTY[most_neighbors] %>% as.character()
plot(nc[most_neighbors,],add=TRUE,col="lightblue")
plot(nc, axes=TRUE)
max(rowSums(adj))
most_neighbors = rowSums(adj)==max(rowSums(adj))
nc$COUNTY[most_neighbors] %>% as.character()
plot(nc[most_neighbors,],add=TRUE,col="lightblue")
plot(nc, axes=TRUE)
min(rowSums(adj))
least_neighbors = rowSums(adj)==min(rowSums(adj))
nc$COUNTY[least_neighbors] %>% as.character()
plot(nc[least_neighbors,],add=TRUE,col="lightred")
plot(nc, axes=TRUE)
min(rowSums(adj))
least_neighbors = rowSums(adj)==min(rowSums(adj))
nc$COUNTY[least_neighbors] %>% as.character()
plot(nc[least_neighbors,],add=TRUE,col="lightblue")
suppressMessages(library(magrittr))
suppressMessages(library(dplyr))
suppressMessages(library(BAS))
load("../Potential datasets/Housing - AMES/ames_test.Rdata")
load("../Potential datasets/Housing - AMES/ames_train.Rdata")
load("../Potential datasets/Housing - AMES/ames_validation.Rdata")
table(ames_train$Sale.Condition)
suppressMessages(library(dplyr))
suppressMessages(library(sf))
options(width=100)
suppressMessages(library(rgeos, quietly=TRUE, warn.conflicts=FALSE))
suppressMessages(library(rgdal, quietly=TRUE, warn.conflicts=FALSE))
suppressMessages(library(sp, quietly=TRUE, warn.conflicts=FALSE))
suppressMessages(library(maptools, quietly=TRUE, warn.conflicts=FALSE))
poly_coords = function(sp)
{
do.call(rbind,
lapply(sp@polygons,
function(p)
do.call(rbind, lapply(p@Polygons,
function(P)
coordinates(P)
)
)
)
)
}
par(mar=c(1,1,2,1), mfrow=c(2,4))
## Point
sp = readWKT('POINT (30 10)')
plot(sp, axes=FALSE, main="Point", pch=16)
points(coordinates(sp), pch=16)
box()
## Linestring
sp = readWKT('LINESTRING (30 10, 10 30, 40 40)')
plot(sp, axes=FALSE, main="Linestring")
r=rapply(coordinates(sp), points, pch=16)
box()
## Polygon
sp = readWKT('POLYGON ((30 10, 40 40, 20 40, 10 20, 30 10))')
plot(sp, axes=FALSE, col="lightgrey", main="Polygon")
points(poly_coords(sp), pch=16)
box()
## Polygon with Hole
sp = readWKT('POLYGON ((35 10, 45 45, 15 40, 10 20, 35 10),
(20 30, 35 35, 30 20, 20 30))')
plot(sp, axes=FALSE, col="lightgrey", main="Polygon w/ Hole(s)")
points(poly_coords(sp), pch=16)
box()
## MultiPoint
sp = readWKT('MULTIPOINT ((10 40), (40 30), (20 20), (30 10))')
plot(sp, axes=FALSE, pch=16, main="MultiPoint")
points(coordinates(sp), pch=16)
box()
## MultiLineString
sp = readWKT('MULTILINESTRING ((10 10, 20 20, 10 40),
(40 40, 30 30, 40 20, 30 10))')
plot(sp, axes=FALSE, main="MultiLinestring")
r=rapply(coordinates(sp), points, pch=16)
box()
## MultiPolygon
sp = readWKT('MULTIPOLYGON (((30 20, 45 40, 10 40, 30 20)),
((15 5, 40 10, 10 20, 5 10, 15 5)))')
plot(sp, axes=FALSE, col="lightgrey", main="MultiPolygon")
points(poly_coords(sp), pch=16)
box()
## MultiPolygon with Hole(s)
sp = readWKT('MULTIPOLYGON (((40 40, 20 45, 45 30, 40 40)),
((20 35, 10 30, 10 10, 30 5, 45 20, 20 35),
(30 20, 20 15, 20 25, 30 20)))')
plot(sp, axes=FALSE, col="lightgrey", main="MultiPolygon w/ Hole(s)")
points(poly_coords(sp), pch=16)
box()
par(mar=c(1,1,1,1))
cols = c("#7fc97f","#386cb0","#beaed4","#fdc086")
pt   = readWKT('POINT (3 3)')
mpt  = readWKT('MULTIPOINT ((4 8), (1 8))')
mls  = readWKT('MULTILINESTRING ((4 6,7 10), (1 1,1 2,2 2))')
poly = readWKT('POLYGON ((6 6, 8 3, 8 8, 6 6))')
plot(0, 0, type='n', axes=FALSE, xlim=c(0,9),ylim=c(0,11),xlab="",ylab="", main="")
box()
plot(pt, add=TRUE, pch=16, col=cols[1], cex=1.5)
plot(mpt, add=TRUE, pch=16, col=cols[2], cex=1.5)
plot(mls, add=TRUE, col=cols[3], lwd=2)
r=rapply(coordinates(mls), points, pch=16, col=cols[3], cex=1.5)
plot(poly, add=TRUE, col=paste0(cols[4],"CC"),lwd=2,border=cols[4])
points(poly_coords(poly), pch=16, col=paste0(cols[4],"CC"),cex=1.5)
library(maptools)
data(wrld_simpl)
NAm = wrld_simpl[wrld_simpl$FIPS %in% c("CA","GL","MX","US"),]
NAm_google = spTransform(NAm, CRS("+init=epsg:3857"))
par(mar=c(3,2,2,1),mfrow=c(1,2))
plot(NAm, col="black", border=adjustcolor("black",alpha=0),
main="Lat/Long (epsg:4326)", xlim=c(-180,-10), axes=TRUE)
box()
plot(NAm_google, col="black", border=adjustcolor("black",alpha=0),
main="Google (epsg:3857)", axes=TRUE, xlim=c(-2e7,0), ylim=c(0,2e7))
box()
par(mar=c(3,3,1,1))
ak = readOGR("data/ak/states.shp","states",FALSE)
for(i in 1:length(ak@polygons[[1]]@Polygons))
{
p = ak@polygons[[1]]@Polygons[[i]]@coords
p[p[,1] > 0,1] = -360 + p[p[,1] > 0,1]
ak@polygons[[1]]@Polygons[[i]]@coords = p
}
plot(ak, col="black", xlim=c(-170,-190), ylim=c(51,53),axes=TRUE)
points(c(-360+179.776,-179.146), c(51.952,51.273),col='red')
abline(v=-180,col='blue',lty=2)
library(geosphere)
par(mar=c(0,0,0,0))
inter = gcIntermediate(c(179.776,51.952), c(-179.146,51.273), n=50, addStartEnd=TRUE)
plot(wrld_simpl, col="black", ylim=c(15,90))
lines(inter,col='red',lwd=2,lty=3)
pt = readWKT("MULTIPOINT ((45 43), (15 70))")
ls = readWKT("LINESTRING (10 10, 10 90)")
po = readWKT("POLYGON ((30 50, 50 80, 70 50, 50 20, 30 50), (40 40, 60 40, 60 60, 40 60, 40 40))")
par(mar=c(0,0,0,0))
plot(0,0, type='n', axes=FALSE, xlab="", ylab="", xlim=c(0,90),ylim=c(0,90))
plot(pt, add=TRUE, pch=16, col=cols[1], cex=1.5)
text(48,50,"C",cex=3,col=cols[1])
text(18,77,"C",cex=3,col=cols[1])
plot(ls, add=TRUE, col=cols[3], lwd=2)
r=rapply(coordinates(ls), points, pch=16, col=cols[3], cex=1.5)
text(5,50,"B",cex=3,col=cols[3])
plot(po, add=TRUE, col=paste0(cols[4],"CC"),lwd=2,border=cols[4])
points(poly_coords(po), pch=16, col=paste0(cols[4],"CC"),cex=1.5)
text(35,70,"A",cex=3,col=paste0(cols[4],"CC"))
nc  = st_read("data/gis/nc_counties/")
air = st_read("data/gis/airports/")
hwy = st_read("data/gis/us_interstates/")
nc
tbl_df(nc)
par(mar=c(3,3,0.1,0.1), mfrow=c(1,3))
plot(nc,  axes=TRUE)
plot(air, axes=TRUE, pch=1, col="blue")
plot(hwy, axes=TRUE, col="red")
par(mar=c(0,0,0,0))
nc = st_transform(nc, st_crs(hwy)$proj4string)
row.names(nc) = sub(" County","", as.character(nc$COUNTY))
air = st_transform(air, st_crs(hwy)$proj4string)
plot(nc, axes=TRUE)
plot(air, add=TRUE, pch=1, col="blue")
plot(hwy, add=TRUE, col="red")
counties = which(row.names(nc) %in% c("Durham","Wake","Orange"))
d = st_distance(nc[counties,],air)
str(d)
d
class(m)
class(d)
class(d) = NULL
str(d)
counties = which(row.names(nc) %in% c("Durham","Wake","Orange"))
d = st_distance(nc[counties,],air)
class(d) = NULL
str(d)
par(mar=c(3,3,0.1,0.1), mfrow=c(1,3))
plot(st_geometry(nc),  axes=TRUE)
plot(st_geometry(air), axes=TRUE, pch=1, col="blue")
plot(st_geometry(hwy), axes=TRUE, col="red")
plot(st_geometry(nc), axes=TRUE)
plot(st_geometry(air), add=TRUE, pch=1, col="blue")
plot(st_geometry(hwy), add=TRUE, col="red")
counties = which(row.names(nc) %in% c("Durham","Wake","Orange"))
counties = c("Durham","Wake","Orange")
d = st_distance(air, nc[counties,])
class(d) = NULL
str(d)
counties = which(row.names(nc) %in% c("Durham","Wake","Orange"))
counties = c("Durham","Wake","Orange")
d = st_distance(air, nc[counties,])
head(d)
counties = which(row.names(nc) %in% c("Durham","Wake","Orange"))
counties = c("Durham","Wake","Orange")
d = st_distance(air, nc[counties,])
dim(d)
counties = which(row.names(nc) %in% c("Durham","Wake","Orange"))
counties = c("Durham","Wake","Orange")
d = st_distance(air, nc[counties,])
d[1:5,]
nearest_airport = apply(d, 1, which.min) %>% unique()
air$AIRPT_NAME[nearest_airport] %>% as.character()
d[, nearest_airport, drop=FALSE]
nearest_airport = apply(d, 1, which.min) %>% unique()
air$AIRPT_NAME[nearest_airport] %>% as.character()
(nc_cent = st_centroid(nc))
d = st_distance(nc_cent[counties],air)
nc$COUNTY
which(c("Durham","Wake","Orange") %in% nc$COUNTY)
View(nc)
counties = which(c("Durham","Wake","Orange") %in% row.names(nc))
counties)index = which(c("Durham","Wake","Orange") %in% row.names(nc))
counties_index = which(c("Durham","Wake","Orange") %in% row.names(nc))
d = st_distance(nc_cent[counties_index],air)
nearest_airport = apply(d, 1, which.min) %>% unique()
air$AIRPT_NAME[nearest_airport] %>% as.character()
d[, nearest_airport, drop=FALSE]
nc_air = st_intersects(nc, air)
str(nc_air[20:30])
has_air = sapply(nc_air, function(x) length(x) > 0)
nc$COUNTY[has_air]
plot(nc, axes=TRUE)
plot(nc, axes=TRUE)
plot(nc[has_air,], add=TRUE, col="lightblue")
plot(air[unlist(nc_air) %>% unique(),], add=TRUE, pch=16, col="blue")
plot(st_geometry(nc), axes=TRUE)
plot(st_geometry(nc[has_air,]), add=TRUE, col="lightblue")
plot(st_geometry(nc), axes=TRUE)
plot(st_geometry(nc[has_air,]), add=TRUE, col="lightblue")
plot(st_geometry(air[unlist(nc_air) %>% unique(),]), add=TRUE, pch=16, col="blue")
durham = which(row.names(nc) == "Durham")
adj = st_touches(nc, sparse=FALSE)
str(adj)
nc$COUNTY[adj[durham,]] %>% as.character()
library(corrplot)
rownames(adj) = rownames(nc)
colnames(adj) = rownames(nc)
corrplot(adj[1:20,1:20],method="color",type="lower",tl.col="black",cl.pos = "n")
max(rowSums(adj))
most_neighbors = rowSums(adj)==max(rowSums(adj))
nc$COUNTY[most_neighbors] %>% as.character()
plot(st_geometry(nc), axes=TRUE)
plot(st_geometry(nc[most_neighbors,]),add=TRUE,col="lightblue")
